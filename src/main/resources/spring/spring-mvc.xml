<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-4.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 启用spring mvc 注解 -->
	<!-- context:component-scan 包含了注入 processor 内容 -->
	<!-- <context:annotation-config /> -->
	<!-- 自动扫描controller包下的所有类，如果@Controller注入为bean -->
	<context:component-scan base-package="x.superman.controller" />
	<mvc:annotation-driven />


	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- ajax 返回乱码 -->
	<!-- <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/plain;charset=UTF-8</value> 
		</list> </property> </bean> -->

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="stringHttpMessageConverter" 
		/> </list> </property> </bean> -->

	<!-- 静态资源访问 -->
	<mvc:resources location="/WEB-INF/static/" mapping="/static/**" />
	<mvc:resources location="/WEB-INF/static/assets/"
		mapping="/assets/**" />
	<mvc:resources location="/WEB-INF/static/business/"
		mapping="/business/**" />
	<mvc:resources location="/WEB-INF/static/AmazeUI-2.7.2/"
		mapping="/example/**" />
	<!-- 自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean,是spring MVC为@Controllers分发请求所必须的。 -->
	<mvc:default-servlet-handler />


	<!--配置jsp视图解析器 -->
	<bean id="viewResolverJsp"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.InternalResourceView" />
		<property name="prefix" value="/WEB-INF/jsp" />
		<property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="order" value="1" />
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolverFtl"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="cache" value="false" />
		<property name="suffix" value=".ftl" />
		<property name="order" value="0" />
	</bean>

	<!-- ftl参数配置 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="/WEB-INF/classes/freemarker.properties" />
	</bean>
	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/WEB-INF/ftl/</value>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
		<!-- -->
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
			</props>
		</property>
		<!-- <property name="freemarkerSettings" ref="freemarkerConfiguration" 
			/> -->
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为31M，31*1024*1024 -->
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>


	<!-- 过滤器 -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="x.superman.interceptor.UrlInterceptor" />
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/management/**" />
			<bean class="x.superman.interceptor.ManagementInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/management/**" />
			<bean class="x.webapp.context.WebappContextInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>  